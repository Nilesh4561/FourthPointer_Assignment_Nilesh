{"version":3,"sources":["./src/environments/environment.ts","./src/app/Directives/custom-tooltip.directive.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/tooltip/tooltip.component.ts","./src/app/tooltip/tooltip.component.html","./src/app/Service/data-flow.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAQuB;AAC+C;;;;AAW/D,MAAM,sBAAsB;IAKjC,YACU,OAAgB,EAChB,sBAA8C,EAC9C,UAAsB,EACtB,gBAAkC,EAClC,QAAyB;QAJzB,YAAO,GAAP,OAAO,CAAS;QAChB,2BAAsB,GAAtB,sBAAsB,CAAwB;QAC9C,eAAU,GAAV,UAAU,CAAY;QACtB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,aAAQ,GAAR,QAAQ,CAAiB;IAChC,CAAC;IAEJ,QAAQ;QACN,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,MAAM,GAAG,GAAG,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAE1C,MAAM,QAAQ,GAAG,IAAI,CAAC,sBAAsB;iBACzC,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC;iBACpC,aAAa,CAAC;gBACb;oBACE,OAAO,EAAE,GAAG,CAAC,QAAQ;oBACrB,OAAO,EAAE,GAAG,CAAC,MAAM;oBACnB,QAAQ,EAAE,GAAG,CAAC,eAAe;oBAC7B,QAAQ,EAAE,GAAG,CAAC,aAAa;oBAC3B,OAAO,EAAE,GAAG,CAAC,OAAO;oBACpB,OAAO,EAAE,GAAG,CAAC,OAAO;iBACrB;aACF,CAAC,CAAC;YAEL,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;gBACpC,gBAAgB,EAAE,QAAQ;aAC3B,CAAC,CAAC;SACJ;aAAM;YACL,OAAO,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;SACvC;IACH,CAAC;IAED,sBAAsB;QACpB,IAAI,QAAQ,GAAQ,QAAQ,CAAC;QAC7B,IAAI,MAAM,GAAQ,QAAQ,CAAC;QAC3B,IAAI,eAAe,GAAQ,QAAQ,CAAC;QACpC,IAAI,aAAa,GAAQ,QAAQ,CAAC;QAClC,IAAI,OAAO,GAAG,CAAC,CAAC;QAChB,IAAI,OAAO,GAAG,CAAC,CAAC;QAChB,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,KAAK,OAAO,EAAE;YAC3C,QAAQ,GAAG,KAAK,CAAC;YACjB,MAAM,GAAG,QAAQ,CAAC;YAClB,eAAe,GAAG,OAAO,CAAC;YAC1B,aAAa,GAAG,QAAQ,CAAC;YACzB,OAAO,GAAG,EAAE,CAAC;YACb,OAAO,GAAG,CAAC,CAAC;SACb;aAAM,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,KAAK,MAAM,EAAE;YACjD,QAAQ,GAAG,OAAO,CAAC;YACnB,MAAM,GAAG,QAAQ,CAAC;YAClB,eAAe,GAAG,KAAK,CAAC;YACxB,aAAa,GAAG,QAAQ,CAAC;YACzB,OAAO,GAAG,CAAC,EAAE,CAAC;YACd,OAAO,GAAG,CAAC,CAAC;SACb;aAAM,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,KAAK,KAAK,EAAE;YAChD,QAAQ,GAAG,QAAQ,CAAC;YACpB,MAAM,GAAG,KAAK,CAAC;YACf,eAAe,GAAG,QAAQ,CAAC;YAC3B,aAAa,GAAG,QAAQ,CAAC;YACzB,OAAO,GAAG,CAAC,CAAC;YACZ,OAAO,GAAG,CAAC,EAAE,CAAC;SACf;aAAM;YACL,QAAQ,GAAG,QAAQ,CAAC;YACpB,MAAM,GAAG,QAAQ,CAAC;YAClB,eAAe,GAAG,QAAQ,CAAC;YAC3B,aAAa,GAAG,KAAK,CAAC;YACtB,OAAO,GAAG,CAAC,CAAC;YACZ,OAAO,GAAG,EAAE,CAAC;SACd;QAED,OAAO;YACL,QAAQ;YACR,MAAM;YACN,eAAe;YACf,aAAa;YACb,OAAO;YACP,OAAO;SACR,CAAC;IACJ,CAAC;IAGO,IAAI;QACV,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,eAA2D,CAAC;YAChE,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC;YACxD,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC;YAErD,IAAI,IAAI,CAAC,cAAc,CAAC,cAAc,YAAY,yDAAW,EAAE;gBAC7D,eAAe,GAAG,IAAI,kEAAc,CAClC,IAAI,CAAC,cAAc,CAAC,cAAc,EAClC,IAAI,CAAC,gBAAgB,CACtB,CAAC;aACH;iBAAM;gBACL,eAAe,GAAG,IAAI,mEAAe,CACnC,IAAI,CAAC,cAAc,CAAC,cAAc,EAClC,IAAI,CAAC,gBAAgB,CACtB,CAAC;aACH;YAED,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;SACzC;IACH,CAAC;IAGO,IAAI;QACV,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;SAC1B;IACH,CAAC;;4FAjHU,sBAAsB;sGAAtB,sBAAsB;wJAAtB,UAAM,wFAAN,UAAM;;;;;;;;;;;;;;AClBnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+D;;;;;;;IC0B7D,yEAAsB;IACpB,qEAAI;IAAA,mFAAwB;IAAA,4DAAK;IACjC,oEAAG;IACD,uDACF;IAAA,4DAAI;IACJ,oEAAG;IACD,uDAEF;IAAA,4DAAI;IACJ,oEAAG;IAAA,oGAAyC;IAAA,4DAAI;IAChD,yEAAmC;IACjC,2EAA+B;IAAA,gEAAI;IAAA,4DAAO;IAC1C,uEAOE;;IACF,2EAA+B;IAAA,gEAAI;IAAA,4DAAO;IAC1C,uEAOE;;IACJ,4DAAM;IACR,4DAAM;;;IA3BF,0DACF;IADE,qJACF;IAEE,0DAEF;IAFE,kLAEF;IAUI,0DAA6C;IAA7C,mKAA6C;IAS7C,0DAA6C;IAA7C,mKAA6C;;;;;;AD9C9C,MAAM,YAAY;IAIvB,YAAmB,QAAyB;QAAzB,aAAQ,GAAR,QAAQ,CAAiB;QAH5C,UAAK,GAAG,YAAY,CAAC;QACrB,qBAAgB,GAAG,2EAAgB,CAAC;IAEW,CAAC;;wEAJrC,YAAY;4FAAZ,YAAY;QCTzB,mFAAiC;QAC/B,sEAAK;QACH,8EAQC;QACC,6EACF;QAAA,4DAAW;QACX,8EAQC;QACC,8EACF;QAAA,4DAAW;QACb,4DAAM;QACR,4DAAgB;QAEhB,qMAgCc;;;QAtDR,0DAIE;QAJF,+NAIE;QAOF,0DAIE;QAJF,gPAIE;;;;;;;;;;;;;;ACnBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAEF;AACT;AACgC;AAEtB;AACsB;AAChB;AACF;AACR;;AAmB9C,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YARJ;YACP,uEAAa;YACb,oEAAgB;YAChB,4FAAuB;YACvB,sEAAc;YACd,0EAAgB;YAChB,kEAAa;SACd;mIAIU,SAAS,mBAflB,2DAAY;QACZ,2FAAsB;QACtB,2EAAgB,aAGhB,uEAAa;QACb,oEAAgB;QAChB,4FAAuB;QACvB,sEAAc;QACd,0EAAgB;QAChB,kEAAa;;;;;;;;;;;;;;;;;;;;;;;ACjBV,MAAM,gBAAgB;IAG3B,YAAoB,QAAyB;QAAzB,aAAQ,GAAR,QAAQ,CAAiB;IAAG,CAAC;IAEjD,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;QACpC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;IACpC,CAAC;;gFARU,gBAAgB;gGAAhB,gBAAgB;QCR7B,yEAAuB;QACrB,yEAAoB;QAClB,qEAAI;QAAA,2FAAgC;QAAA,4DAAK;QAC3C,4DAAM;QACN,yEAAkB;QAChB,uEAAuB;QAAA,iFAAsB;QAAA,4DAAI;QACjD,gEAAM;QACN,oEAAG;QAAA,uDAA0D;QAAA,4DAAI;QACjE,qEAAG;QAAA,wDAAkE;QAAA,4DAAI;QACzE,qEAAG;QAAA,0GAA8C;QAAA,4DAAI;QACrD,0EAAmC;QACjC,2EAA+B;QAAA,gEAAI;QAAA,4DAAO;QAC1C,uEAOE;;QACF,2EAA+B;QAAA,gEAAI;QAAA,4DAAO;QAC1C,uEAOE;;QACJ,4DAAM;QACR,4DAAM;QACN,6EAAkD;QAClD,0EAAoB;QAClB,6EAA0B;QAAA,iFAAqB;QAAA,4DAAQ;QACzD,4DAAM;QACR,4DAAM;;QA5BC,0DAA0D;QAA1D,kIAA0D;QAC1D,0DAAkE;QAAlE,8IAAkE;QAUjE,0DAA+B;QAA/B,kJAA+B;QAS/B,0DAA+B;QAA/B,kJAA+B;;;;;;;;;;;;;;;;;;ACtBhC,MAAM,eAAe;IAK1B,gBAAgB,CAAC;;8EALN,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;;;;;;;;;;;;;ACFpB;AAAA;AAAA;AAAA;AAAuD;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;;;;;;;ACPuB;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {\n  Directive,\n  ElementRef,\n  HostListener,\n  Input,\n  OnInit,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { ComponentPortal, TemplatePortal } from '@angular/cdk/portal';\nimport {\n  Overlay,\n  OverlayPositionBuilder,\n  OverlayRef,\n} from '@angular/cdk/overlay';\nimport { DataFlowService } from '../Service/data-flow.service';\n\n@Directive({\n  selector: '[appCustomTooltip]',\n})\nexport class CustomTooltipDirective implements OnInit {\n  @Input('appCustomTooltip') tooltipContent: any;\n\n  private overlayRef: OverlayRef;\n\n  constructor(\n    private overlay: Overlay,\n    private overlayPositionBuilder: OverlayPositionBuilder,\n    private elementRef: ElementRef,\n    private viewContainerRef: ViewContainerRef,\n    private dataFlow: DataFlowService\n  ) {}\n\n  ngOnInit(): void {\n    if (this.tooltipContent) {\n      const pos = this.setCustomPositionValue();\n\n      const position = this.overlayPositionBuilder\n        .flexibleConnectedTo(this.elementRef)\n        .withPositions([\n          {\n            originX: pos.startPos,\n            originY: pos.endPos,\n            overlayX: pos.startOverlayPos,\n            overlayY: pos.endOverlayPos,\n            offsetX: pos.offSetX,\n            offsetY: pos.offSetY,\n          },\n        ]);\n\n      this.overlayRef = this.overlay.create({\n        positionStrategy: position,\n      });\n    } else {\n      console.error('something went wrong');\n    }\n  }\n\n  setCustomPositionValue(): any {\n    let startPos: any = 'center';\n    let endPos: any = 'center';\n    let startOverlayPos: any = 'center';\n    let endOverlayPos: any = 'center';\n    let offSetX = 0;\n    let offSetY = 0;\n    if (this.tooltipContent.postion === 'right') {\n      startPos = 'end';\n      endPos = 'center';\n      startOverlayPos = 'start';\n      endOverlayPos = 'center';\n      offSetX = 10;\n      offSetY = 0;\n    } else if (this.tooltipContent.postion === 'left') {\n      startPos = 'start';\n      endPos = 'center';\n      startOverlayPos = 'end';\n      endOverlayPos = 'center';\n      offSetX = -10;\n      offSetY = 0;\n    } else if (this.tooltipContent.postion === 'top') {\n      startPos = 'center';\n      endPos = 'top';\n      startOverlayPos = 'center';\n      endOverlayPos = 'bottom';\n      offSetX = 0;\n      offSetY = -10;\n    } else {\n      startPos = 'center';\n      endPos = 'bottom';\n      startOverlayPos = 'center';\n      endOverlayPos = 'top';\n      offSetX = 0;\n      offSetY = 10;\n    }\n\n    return {\n      startPos,\n      endPos,\n      startOverlayPos,\n      endOverlayPos,\n      offSetX,\n      offSetY,\n    };\n  }\n\n  @HostListener('mouseenter')\n  private show(): void {\n    if (this.overlayRef) {\n      let containerPortal: TemplatePortal<any> | ComponentPortal<any>;\n      this.dataFlow.inputData = this.tooltipContent.inputData;\n      this.dataFlow.position = this.tooltipContent.postion;\n\n      if (this.tooltipContent.tooltipContent instanceof TemplateRef) {\n        containerPortal = new TemplatePortal(\n          this.tooltipContent.tooltipContent,\n          this.viewContainerRef\n        );\n      } else {\n        containerPortal = new ComponentPortal(\n          this.tooltipContent.tooltipContent,\n          this.viewContainerRef\n        );\n      }\n\n      this.overlayRef.attach(containerPortal);\n    }\n  }\n\n  @HostListener('mouseout')\n  private hide(): void {\n    if (this.overlayRef) {\n      this.overlayRef.detach();\n    }\n  }\n}\n","import { Component } from '@angular/core';\nimport { DataFlowService } from './Service/data-flow.service';\nimport { TooltipComponent } from './tooltip/tooltip.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'assignment';\n  tooltipComponent = TooltipComponent;\n\n  constructor(public dataFlow: DataFlowService) {}\n}\n","<mat-chip-list class=\"chip-list\">\n  <div>\n    <mat-chip\n      color=\"primary\"\n      selected\n      [appCustomTooltip]=\"{\n        tooltipContent: tooltipTemplate,\n        inputData: { name: 'ravi', city: 'mumbai' },\n        postion: 'left'\n      }\"\n    >\n      Template Tooltip\n    </mat-chip>\n    <mat-chip\n      color=\"accent\"\n      selected\n      [appCustomTooltip]=\"{\n        tooltipContent: tooltipComponent,\n        inputData: { name: 'nilesh', city: 'renukoot' },\n        postion: 'right'\n      }\"\n    >\n      Component Tooltip\n    </mat-chip>\n  </div>\n</mat-chip-list>\n\n<ng-template #tooltipTemplate>\n  <div class=\"template\">\n    <h3>Angular template tooltip</h3>\n    <p>\n      Positon Provided : left | right | top | bottom : {{ dataFlow.position }}\n    </p>\n    <p>\n      Input Data Provided : name: {{ dataFlow.inputData.name }}, city:\n      {{ dataFlow.inputData.city }}\n    </p>\n    <p>tooltip contetnt : instanceof TemplateRef</p>\n    <div class=\"input-group mb-3 mt-3\">\n      <span class=\"input-group-text\">Name</span>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"name\"\n        aria-label=\"name\"\n        readonly\n        [value]=\"dataFlow.inputData.name | uppercase\"\n      />\n      <span class=\"input-group-text\">City</span>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"city\"\n        aria-label=\"city\"\n        readonly\n        [value]=\"dataFlow.inputData.city | uppercase\"\n      />\n    </div>\n  </div>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatChipsModule } from '@angular/material/chips';\nimport { CustomTooltipDirective } from './Directives/custom-tooltip.directive';\nimport { TooltipComponent } from './tooltip/tooltip.component';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { OverlayModule } from '@angular/cdk/overlay';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CustomTooltipDirective,\n    TooltipComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatChipsModule,\n    MatDividerModule,\n    OverlayModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { DataFlowService } from '../Service/data-flow.service';\n\n@Component({\n  selector: 'app-tooltip',\n  templateUrl: './tooltip.component.html',\n  styleUrls: ['./tooltip.component.scss'],\n})\nexport class TooltipComponent implements OnInit {\n  data: any;\n  pos: any;\n  constructor(private dataFlow: DataFlowService) {}\n\n  ngOnInit(): void {\n    this.data = this.dataFlow.inputData;\n    this.pos = this.dataFlow.position;\n  }\n}\n","<div class=\"component\">\n  <div class=\"header\">\n    <h2>Angular Component Tooltip Header</h2>\n  </div>\n  <div class=\"body\">\n    <p class=\"center-text\">Angular Component body</p>\n    <br />\n    <p>Positon Provided : left | right | top | bottom : {{ pos }}</p>\n    <p>Input Data Provided : name: {{ data.name }}, city: {{ data.city }}</p>\n    <p>Tooltip Contetnt : instanceof TooltipComponent</p>\n    <div class=\"input-group mb-3 mt-3\">\n      <span class=\"input-group-text\">Name</span>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"name\"\n        aria-label=\"name\"\n        readonly\n        [value]=\"data.name | uppercase\"\n      />\n      <span class=\"input-group-text\">City</span>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"city\"\n        aria-label=\"city\"\n        readonly\n        [value]=\"data.city | uppercase\"\n      />\n    </div>\n  </div>\n  <mat-divider class=\"footer-divider\"></mat-divider>\n  <div class=\"footer\">\n    <small class=\"right-text\">component header foot</small>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataFlowService {\n\n  inputData: any;\n  position: any;\n\n  constructor() { }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}